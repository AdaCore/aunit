project AUnit_Build is

   type Yes_No_Type is ("yes", "no");
   Exception_Support : Yes_No_Type := external ("SUPPORT_EXCEPTION", "yes");
   Calendar_Support : Yes_No_Type := external ("SUPPORT_CALENDAR", "yes");

   for Source_Dirs use ("framework",
                        "containers",
                        "text_reporter");

   case Exception_Support is
      when "yes" =>
         for Source_Dirs use project'Source_Dirs & "framework/exception";
      when "no" =>
         for Source_Dirs use project'Source_Dirs & "framework/noexception";
   end case;

   case Calendar_Support is
      when "yes" =>
         for Source_Dirs use project'Source_Dirs & "framework/calendar";
      when "no" =>
         for Source_Dirs use project'Source_Dirs & "framework/nocalendar";
   end case;

   for Object_Dir use "obj";
   for Library_Dir use "lib";
   for Library_Name use "aunit";
   for Library_Kind use "static";

   package Builder is
      for Default_Switches ("ada") use
        ("-g", "-gnatQ");
   end Builder;

   package Compiler is
      case Exception_Support is
         when "yes" =>
            for Default_Switches ("ada") use
              ("-O1", "-gnatf", "-gnato", "-gnatwae", "-gnaty");
         when "no" =>
            for Default_Switches ("ada") use
              ("-O1", "-gnatf", "-gnato", "-gnatws", "-gnaty");
      end case;
   end Compiler;

end AUnit_Build;
