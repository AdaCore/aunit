project AUnit_Shared is

   Target := external ("PLATFORM", "native");

   type Runtime_Type is
      (
       "full",           -- used for all full capability runtimes
       "zfp",            -- used for all zfp/sfp/minimal runtimes
       "ravenscar",      -- used for full ravenscar runtimes
       "ravenscar-cert", -- used for ravenscar-cert runtimes
       "cert"            -- used for cert runtimes
      );

   Runtime : Runtime_Type := external ("RUNTIME", "full");

   Library_Dir := external ("LIBDIR", "../aunit/" & Target & "-" & Runtime);

   for Source_Dirs use ();

   type Exception_Type is ("fullexception", "certexception", "zfpexception");
   type Calendar_Type is ("calendar", "nocalendar");
   type Memory_type is ("nativememory", "staticmemory");

   Except : Exception_Type := "fullexception";
   Calend : Calendar_Type := "calendar";
   Memory : Memory_Type := "nativememory";

   case Runtime is
      when "zfp" =>
         Except := "zfpexception";
         Calend := "nocalendar";
         Memory := "staticmemory";
      when "ravenscar" =>
         Except := "certexception";
         Calend := "nocalendar";
      when "ravenscar-cert" =>
         Except := "certexception";
         Calend := "nocalendar";
         Memory := "staticmemory";
      when "cert" =>
         Except := "certexception";
         Memory := "staticmemory";
      when others =>
   end case;

end AUnit_Shared;
